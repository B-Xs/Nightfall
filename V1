getgenv().esp = {
    MasterSwitch = false,
    BoxEnabled = false,
    BoxColor = Color3.fromRGB(255, 255, 255),
    BoxThickness = 1,
    NameColor = Color3.fromRGB(255, 0, 0),
    TracerColor = Color3.fromRGB(0, 255, 0),
    CharacterSize = Vector3.new(4, 5.75, 1.5),
    BoxStaticXFactor = 1.3,
    BoxStaticYFactor = 2.1,
    BoxDynamic = false,
    CharacterOffset = CFrame.new(0, -0.25, 0),
    UseBoundingBox = false,
    MaxDistance = 100,
    TracerEnabled = false,
    NameEnabled = false
}

local a = workspace.CurrentCamera
local b = game:GetService('RunService')
local c = {}
local d = a.WorldToViewportPoint

function vector2_floor(e)
    return Vector2.new(math.floor(e.X), math.floor(e.Y))
end

function cframe_to_viewport(f)
    local position, g = d(a, f.Position)
    local h = position.Z > 0
    if not h then g = false end
    return Vector2.new(position.X, position.Y), g
end

local i = {}
i.__index = i

function i:New(j)
    local self = setmetatable({}, i)
    self.player = j
    self.boxDrawings = {}
    for k = 1, 8 do
        self.boxDrawings[k] = Drawing.new("Line")
    end
    self.nameDrawing = Drawing.new("Text")
    self.nameDrawing.Size = 15
    self.nameDrawing.Center = true
    self.nameDrawing.Outline = true
    self.tracer = Drawing.new("Line")
    return self
end

function i:Update()
    local l = self.player.Character
    local m = l and l:FindFirstChild("HumanoidRootPart")
    if not m or not l.Parent then
        self:HideBox()
        return
    end
    local n = (a.CFrame.p - m.Position).magnitude
    if n > esp.MaxDistance then
        self:HideBox()
        return
    end
    local position, g = cframe_to_viewport(m.CFrame * esp.CharacterOffset)
    if not g then
        self:HideBox()
        return
    end
    local o = self:GetBoxSize(m.CFrame)
    local p = vector2_floor(position - o / 2)
    self:DrawBox(p, o)
    self:DrawTracer(position, p, o)
    if esp.NameEnabled then
        self:DrawName(p, o)
    else
        self.nameDrawing.Visible = false -- Ensure the name goes invisible when esp.NameEnabled is false
    end
end

function i:GetBoxSize(f)
    if esp.BoxDynamic then
        local q = esp.CharacterSize
        if esp.UseBoundingBox then
            _, q = self.player.Character:GetBoundingBox()
        end
        local r = cframe_to_viewport(f * CFrame.new(q.X, 0, 0))
        local s = cframe_to_viewport(f * CFrame.new(0, q.Y, 0))
        local t = math.abs(r.X - position.X)
        local u = math.abs(s.Y - position.Y)
        return Vector2.new(t, u)
    else
        local n = (a.CFrame.p - f.p).magnitude
        local v = 1 / (n / 3 * math.tan(math.rad(a.FieldOfView / 2)) * 2) * 1000
        return Vector2.new(v * esp.BoxStaticXFactor, v * esp.BoxStaticYFactor)
    end
end

function i:DrawBox(p, o)
    local w = o.X / 3
    self.boxDrawings[1].From = p
    self.boxDrawings[1].To = p + Vector2.new(w, 0)
    self.boxDrawings[1].Color = esp.BoxColor
    self.boxDrawings[1].Thickness = esp.BoxThickness
    self.boxDrawings[1].Visible = esp.BoxEnabled
    self.boxDrawings[2].From = p
    self.boxDrawings[2].To = p + Vector2.new(0, w)
    self.boxDrawings[2].Color = esp.BoxColor
    self.boxDrawings[2].Thickness = esp.BoxThickness
    self.boxDrawings[2].Visible = esp.BoxEnabled
    local x = p + Vector2.new(0, o.Y)
    self.boxDrawings[3].From = x
    self.boxDrawings[3].To = x + Vector2.new(w, 0)
    self.boxDrawings[3].Color = esp.BoxColor
    self.boxDrawings[3].Thickness = esp.BoxThickness
    self.boxDrawings[3].Visible = esp.BoxEnabled
    self.boxDrawings[4].From = x
    self.boxDrawings[4].To = x + Vector2.new(0, -w)
    self.boxDrawings[4].Color = esp.BoxColor
    self.boxDrawings[4].Thickness = esp.BoxThickness
    self.boxDrawings[4].Visible = esp.BoxEnabled
    local y = p + Vector2.new(o.X, 0)
    self.boxDrawings[5].From = y
    self.boxDrawings[5].To = y + Vector2.new(-w, 0)
    self.boxDrawings[5].Color = esp.BoxColor
    self.boxDrawings[5].Thickness = esp.BoxThickness
    self.boxDrawings[5].Visible = esp.BoxEnabled
    self.boxDrawings[6].From = y
    self.boxDrawings[6].To = y + Vector2.new(0, w)
    self.boxDrawings[6].Color = esp.BoxColor
    self.boxDrawings[6].Thickness = esp.BoxThickness
    self.boxDrawings[6].Visible = esp.BoxEnabled
    local z = y + Vector2.new(0, o.Y)
    self.boxDrawings[7].From = z
    self.boxDrawings[7].To = z + Vector2.new(-w, 0)
    self.boxDrawings[7].Color = esp.BoxColor
    self.boxDrawings[7].Thickness = esp.BoxThickness
    self.boxDrawings[7].Visible = esp.BoxEnabled
    self.boxDrawings[8].From = z
    self.boxDrawings[8].To = z + Vector2.new(0, -w)
    self.boxDrawings[8].Color = esp.BoxColor
    self.boxDrawings[8].Thickness = esp.BoxThickness
    self.boxDrawings[8].Visible = esp.BoxEnabled
end

function i:DrawName(p, o)
    local A = Vector2.new(p.X + o.X / 2, p.Y - 15)
    self.nameDrawing.Position = A
    self.nameDrawing.Text = self.player.Name
    self.nameDrawing.Color = esp.NameColor
    
    -- Always update the position, but control visibility with esp.NameEnabled
    if esp.NameEnabled then
        self.nameDrawing.Visible = true
    else
        self.nameDrawing.Visible = false
        self.nameDrawing.Position = Vector2.new(0, 0)  -- Reset position when disabling
    end
end

function i:DrawTracer(position, p, o)
    if esp.TracerEnabled then
        self.tracer.From = Vector2.new(a.ViewportSize.X / 2, a.ViewportSize.Y)
        self.tracer.To = Vector2.new(p.X + o.X / 2, p.Y + o.Y)
        self.tracer.Color = esp.TracerColor
        self.tracer.Thickness = esp.BoxThickness
        self.tracer.Visible = esp.TracerEnabled
    else
        self.tracer.Visible = false
    end
end

function i:HideBox()
    for _, B in pairs(self.boxDrawings) do
        B.Visible = false
    end
  
    self.nameDrawing.Visible = false -- Explicitly hide the name drawing when hiding the box
    self.tracer.Visible = false
end

local function C()
    if not esp.MasterSwitch then
        for _, D in pairs(c) do
            D:HideBox()
        end
        return
    end
    for _, E in ipairs(game.Players:GetPlayers()) do
        if E ~= game.Players.LocalPlayer and E.Character and E.Character:FindFirstChild("HumanoidRootPart") then
            if not c[E] then
                c[E] = i:New(E)
            end
            c[E]:Update()
        elseif c[E] then
            c[E]:HideBox()
        end
    end
end

game.Players.PlayerAdded:Connect(function(E)
    E.CharacterAdded:Connect(function(l)
        if not c[E] then
            c[E] = i:New(E)
        end
    end)
end)

game.Players.PlayerRemoving:Connect(function(E)
    if c[E] then
        c[E]:HideBox()
        c[E] = nil
    end
end)

b.RenderStepped:Connect(C)
